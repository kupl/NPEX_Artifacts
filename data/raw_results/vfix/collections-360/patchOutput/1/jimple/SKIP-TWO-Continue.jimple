    private boolean setNextObject()
    {
        org.apache.commons.collections.iterators.FilterListIterator this;
        java.lang.Object object;
        boolean $z0, $z1, $z2, 'ret', $z3;
        java.util.ListIterator $r0, $r2;
        org.apache.commons.collections.Predicate $r1;

        this := @this: org.apache.commons.collections.iterators.FilterListIterator;

        'ret' = 0;

        $z0 = this.<org.apache.commons.collections.iterators.FilterListIterator: boolean previousObjectSet>;

        if $z0 == 0 goto label3;

        specialinvoke this.<org.apache.commons.collections.iterators.FilterListIterator: void clearPreviousObject()>();

        $z2 = specialinvoke this.<org.apache.commons.collections.iterators.FilterListIterator: boolean setNextObject()>();

        if $z2 != 0 goto label1;

        'ret' = 0;

     label1:
        specialinvoke this.<org.apache.commons.collections.iterators.FilterListIterator: void clearNextObject()>();

        goto label3;

     label2:
        $r0 = this.<org.apache.commons.collections.iterators.FilterListIterator: java.util.ListIterator iterator>;

        object = interfaceinvoke $r0.<java.util.ListIterator: java.lang.Object next()>();

        $r1 = this.<org.apache.commons.collections.iterators.FilterListIterator: org.apache.commons.collections.Predicate predicate>;

        $z1 = interfaceinvoke $r1.<org.apache.commons.collections.Predicate: boolean evaluate(java.lang.Object)>(object);

        if $z1 == 0 goto label3;

        this.<org.apache.commons.collections.iterators.FilterListIterator: java.lang.Object nextObject> = object;

        this.<org.apache.commons.collections.iterators.FilterListIterator: boolean nextObjectSet> = 1;

        'ret' = 1;

     label3:
        $r2 = this.<org.apache.commons.collections.iterators.FilterListIterator: java.util.ListIterator iterator>;

        if $r2 == null goto label4;

        $z3 = interfaceinvoke $r2.<java.util.ListIterator: boolean hasNext()>();

        if $z3 != 0 goto label2;

     label4:
        return 'ret';
    }
