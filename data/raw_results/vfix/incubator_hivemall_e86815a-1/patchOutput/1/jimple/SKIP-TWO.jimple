    protected void forwardModel() throws org.apache.hadoop.hive.ql.metadata.HiveException
    {
        hivemall.GeneralLearnerBaseUDTF this;
        float cv, v, itor#30;
        java.lang.Object k, v#31;
        boolean $z0, $z1, $z2;
        hivemall.model.PredictionModel $r0, $r17, $r21, $r22;
        org.apache.commons.logging.Log $r1, $r6;
        java.lang.StringBuilder $r2, $r3, $r5, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r23, $r24, $r25;
        java.lang.String $r4, $r10, $r26;
        hivemall.model.WeightValue $r15;
        org.apache.hadoop.io.FloatWritable $r16, $r19, $r20;
        byte $b0, $b1, $b2, $b6;
        hivemall.model.WeightValue$WeightValueWithCovar $r18;
        int numForwarded, $i3, $i4;
        java.lang.Object[] forwardMapObj;
        hivemall.utils.collections.IMapIterator itor, cov#20;
        long probe#38, $l5;

        this := @this: hivemall.GeneralLearnerBaseUDTF;

        numForwarded = 0;

        $z0 = virtualinvoke this.<hivemall.GeneralLearnerBaseUDTF: boolean useCovariance()>();

        if $z0 == 0 goto label05;

        $r18 = new hivemall.model.WeightValue$WeightValueWithCovar;

        specialinvoke $r18.<hivemall.model.WeightValue$WeightValueWithCovar: void <init>()>();

        forwardMapObj = newarray (java.lang.Object)[3];

        $r19 = new org.apache.hadoop.io.FloatWritable;

        specialinvoke $r19.<org.apache.hadoop.io.FloatWritable: void <init>()>();

        $r20 = new org.apache.hadoop.io.FloatWritable;

        specialinvoke $r20.<org.apache.hadoop.io.FloatWritable: void <init>()>();

        $r21 = this.<hivemall.GeneralLearnerBaseUDTF: hivemall.model.PredictionModel model>;

        itor = interfaceinvoke $r21.<hivemall.model.PredictionModel: hivemall.utils.collections.IMapIterator entries()>();

     label01:
        $i3 = interfaceinvoke itor.<hivemall.utils.collections.IMapIterator: int next()>();

        if $i3 == -1 goto label04;

        interfaceinvoke itor.<hivemall.utils.collections.IMapIterator: void getValue(hivemall.utils.lang.Copyable)>($r18);

        $z2 = virtualinvoke $r18.<hivemall.model.WeightValue$WeightValueWithCovar: boolean isTouched()>();

        if $z2 != 0 goto label02;

        goto label01;

     label02:
        v = virtualinvoke $r18.<hivemall.model.WeightValue$WeightValueWithCovar: float get()>();

        cv = virtualinvoke $r18.<hivemall.model.WeightValue$WeightValueWithCovar: float getCovariance()>();

        $b1 = v cmpl 0.0F;

        if $b1 != 0 goto label03;

        $b2 = cv cmpl 0.0F;

        if $b2 != 0 goto label03;

        goto label01;

     label03:
        virtualinvoke $r19.<org.apache.hadoop.io.FloatWritable: void set(float)>(v);

        virtualinvoke $r20.<org.apache.hadoop.io.FloatWritable: void set(float)>(cv);

        k = interfaceinvoke itor.<hivemall.utils.collections.IMapIterator: java.lang.Object getKey()>();

        forwardMapObj[0] = k;

        forwardMapObj[1] = $r19;

        forwardMapObj[2] = $r20;

        virtualinvoke this.<hivemall.GeneralLearnerBaseUDTF: void forward(java.lang.Object)>(forwardMapObj);

        numForwarded = numForwarded + 1;

        goto label01;

     label04:
        goto label09;

     label05:
        $r0 = this.<hivemall.GeneralLearnerBaseUDTF: hivemall.model.PredictionModel model>;

        if $r0 == null goto label09;

        $r15 = new hivemall.model.WeightValue;

        specialinvoke $r15.<hivemall.model.WeightValue: void <init>()>();

        forwardMapObj = newarray (java.lang.Object)[2];

        $r16 = new org.apache.hadoop.io.FloatWritable;

        specialinvoke $r16.<org.apache.hadoop.io.FloatWritable: void <init>()>();

        $r17 = this.<hivemall.GeneralLearnerBaseUDTF: hivemall.model.PredictionModel model>;

        cov#20 = interfaceinvoke $r17.<hivemall.model.PredictionModel: hivemall.utils.collections.IMapIterator entries()>();

     label06:
        $i4 = interfaceinvoke cov#20.<hivemall.utils.collections.IMapIterator: int next()>();

        if $i4 == -1 goto label09;

        interfaceinvoke cov#20.<hivemall.utils.collections.IMapIterator: void getValue(hivemall.utils.lang.Copyable)>($r15);

        $z1 = virtualinvoke $r15.<hivemall.model.WeightValue: boolean isTouched()>();

        if $z1 != 0 goto label07;

        goto label06;

     label07:
        itor#30 = virtualinvoke $r15.<hivemall.model.WeightValue: float get()>();

        $b0 = itor#30 cmpl 0.0F;

        if $b0 != 0 goto label08;

        goto label06;

     label08:
        virtualinvoke $r16.<org.apache.hadoop.io.FloatWritable: void set(float)>(itor#30);

        v#31 = interfaceinvoke cov#20.<hivemall.utils.collections.IMapIterator: java.lang.Object getKey()>();

        forwardMapObj[0] = v#31;

        forwardMapObj[1] = $r16;

        virtualinvoke this.<hivemall.GeneralLearnerBaseUDTF: void forward(java.lang.Object)>(forwardMapObj);

        numForwarded = numForwarded + 1;

        goto label06;

     label09:
        $r22 = this.<hivemall.GeneralLearnerBaseUDTF: hivemall.model.PredictionModel model>;

        if $r22 == null goto label12;

        probe#38 = interfaceinvoke $r22.<hivemall.model.PredictionModel: long getNumMixed()>();

        $r1 = <hivemall.GeneralLearnerBaseUDTF: org.apache.commons.logging.Log logger>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trained a prediction model using ");

        $l5 = this.<hivemall.GeneralLearnerBaseUDTF: long count>;

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        $r2 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" training examples");

        $b6 = probe#38 cmp 0L;

        if $b6 <= 0 goto label10;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("( numMixed: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(probe#38);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )");

        $r26 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label11;

     label10:
        $r26 = "";

     label11:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r4);

     label12:
        $r6 = <hivemall.GeneralLearnerBaseUDTF: org.apache.commons.logging.Log logger>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Forwarded the prediction model of ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(numForwarded);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rows");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r10);

        return;
    }
