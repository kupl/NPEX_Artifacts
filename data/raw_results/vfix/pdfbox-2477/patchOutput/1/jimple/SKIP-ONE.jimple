    private void manageStructuredType(org.apache.xmpbox.XMPMetadata, org.w3c.dom.Element, java.lang.String, org.apache.xmpbox.type.ComplexPropertyContainer) throws org.apache.xmpbox.xml.XmpParsingException
    {
        org.apache.xmpbox.xml.DomXmpParser this;
        org.apache.xmpbox.XMPMetadata xmp;
        org.w3c.dom.Element property, ast;
        java.lang.String prefix;
        org.apache.xmpbox.type.ComplexPropertyContainer container;
        org.apache.xmpbox.type.AbstractStructuredType ast;
        boolean $z0;
        org.apache.xmpbox.xml.DomXmpParser$NamespaceFinder $r0;
        javax.xml.namespace.QName $r1, $r2;

        this := @this: org.apache.xmpbox.xml.DomXmpParser;

        xmp := @parameter0: org.apache.xmpbox.XMPMetadata;

        property := @parameter1: org.w3c.dom.Element;

        prefix := @parameter2: java.lang.String;

        container := @parameter3: org.apache.xmpbox.type.ComplexPropertyContainer;

        $z0 = staticinvoke <org.apache.xmpbox.xml.DomHelper: boolean isParseTypeResource(org.w3c.dom.Element)>(property);

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <org.apache.xmpbox.xml.DomHelper: javax.xml.namespace.QName getQName(org.w3c.dom.Element)>(property);

        ast = specialinvoke this.<org.apache.xmpbox.xml.DomXmpParser: org.apache.xmpbox.type.AbstractStructuredType parseLiDescription(org.apache.xmpbox.XMPMetadata,javax.xml.namespace.QName,org.w3c.dom.Element)>(xmp, $r2, property);

        if ast == null goto label1;

        virtualinvoke ast.<org.apache.xmpbox.type.AbstractStructuredType: void setPrefix(java.lang.String)>(prefix);

     label1:
        virtualinvoke container.<org.apache.xmpbox.type.ComplexPropertyContainer: void addProperty(org.apache.xmpbox.type.AbstractField)>(ast);

        goto label3;

     label2:
        ast = staticinvoke <org.apache.xmpbox.xml.DomHelper: org.w3c.dom.Element getFirstChildElement(org.w3c.dom.Element)>(property);

        if ast == null goto label3;

        $r0 = this.<org.apache.xmpbox.xml.DomXmpParser: org.apache.xmpbox.xml.DomXmpParser$NamespaceFinder nsFinder>;

        virtualinvoke $r0.<org.apache.xmpbox.xml.DomXmpParser$NamespaceFinder: void push(org.w3c.dom.Element)>(ast);

        $r1 = staticinvoke <org.apache.xmpbox.xml.DomHelper: javax.xml.namespace.QName getQName(org.w3c.dom.Element)>(property);

        ast = specialinvoke this.<org.apache.xmpbox.xml.DomXmpParser: org.apache.xmpbox.type.AbstractStructuredType parseLiDescription(org.apache.xmpbox.XMPMetadata,javax.xml.namespace.QName,org.w3c.dom.Element)>(xmp, $r1, ast);

        virtualinvoke ast.<org.apache.xmpbox.type.AbstractStructuredType: void setPrefix(java.lang.String)>(prefix);

        virtualinvoke container.<org.apache.xmpbox.type.ComplexPropertyContainer: void addProperty(org.apache.xmpbox.type.AbstractField)>(ast);

     label3:
        return;
    }
